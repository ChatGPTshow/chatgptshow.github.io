"use strict";(self.webpackChunkchatgpt_blog=self.webpackChunkchatgpt_blog||[]).push([[2767],{6745:(t,e,l)=>{l.r(e),l.d(e,{comp:()=>u,data:()=>g});var d=l(641);const a={href:"https://mp.weixin.qq.com/s/MO5yB1wUFoaUkw2XbaLCbg",target:"_blank",rel:"noopener noreferrer"},s={href:"https://mp.weixin.qq.com/s/ZB-gSJq4jgzVTUSofGoOgQ",target:"_blank",rel:"noopener noreferrer"},n={href:"https://mp.weixin.qq.com/s/MO5yB1wUFoaUkw2XbaLCbg",target:"_blank",rel:"noopener noreferrer"},o={href:"https://mp.weixin.qq.com/s/ZB-gSJq4jgzVTUSofGoOgQ",target:"_blank",rel:"noopener noreferrer"},i={href:"https://gaccode.com",target:"_blank",rel:"noopener noreferrer"},c={href:"https://gaccode.com/signup?ref=OLWRETNE",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.chatshare.uno/",target:"_blank",rel:"noopener noreferrer"},p={},u=(0,l(6262).A)(p,[["render",function(t,e){const l=(0,d.g2)("ExternalLinkIcon");return(0,d.uX)(),(0,d.CE)("div",null,[e[12]||(e[12]=(0,d.Lk)("h1",{id:"全面掌控-claude-code-命令-参数-快捷键一文全整理-建议收藏",tabindex:"-1"},[(0,d.Lk)("a",{class:"header-anchor",href:"#全面掌控-claude-code-命令-参数-快捷键一文全整理-建议收藏"},[(0,d.Lk)("span",null,"全面掌控 Claude Code：命令 + 参数 + 快捷键一文全整理（建议收藏）")])],-1)),e[13]||(e[13]=(0,d.Lk)("p",null,"近日，随着Cursor套餐定价的风波，Claude Code 无疑成为了最近颇受欢迎的代码助手，不仅支持多种编程语言，还比Cursor更能理解复杂的上下文逻辑，极受广大开发者的青睐。",-1)),e[14]||(e[14]=(0,d.Lk)("p",null,[(0,d.Lk)("img",{src:"https://img.zeker.top/claude/claude-code-full-command-list/1.webp",alt:""})],-1)),e[15]||(e[15]=(0,d.Lk)("p",null,"不过，与其他AI编程助手不同的是，Claude Code 以 CLI 形式运行在本地终端，对于开发者来说，部署操作没什么，但对于代码小白来说，想真正用顺手，还是得熟悉它的命令和用法。",-1)),e[16]||(e[16]=(0,d.Lk)("p",null,"前阵子分别对于Mac、Linux、Windows系统安装部署Claude Code分别写了文章，不知道怎么部署的可以看一下往期文章",-1)),(0,d.Lk)("p",null,[(0,d.Lk)("a",a,[e[0]||(e[0]=(0,d.eW)("Claude Code是什么？Mac、Linux系统如何安装部署呢？",-1)),(0,d.bF)(l)])]),(0,d.Lk)("p",null,[(0,d.Lk)("a",s,[e[1]||(e[1]=(0,d.eW)("【保姆级教程】Windows系统如何安装部署Claude Code？国内如何使用到Claude Code？",-1)),(0,d.bF)(l)])]),e[17]||(e[17]=(0,d.Fv)('<p><strong>为更方便大家使用，为此我整理了一份 Claude Code 的实用命令速查表，涵盖了常用场景和技巧，方便大家在工作中随时查阅。</strong></p><p><strong>建议收藏，关键时候没准还真能省不少时间。</strong></p><blockquote><p>为了防止小白朋友们一些不必要的误解，简单说明一下</p><p><strong>未进入Claude Code前使用</strong>：CLI 命令、CLI 参数（Flags）、交互模式快捷键</p><p><strong>进入Claude Code后使用</strong>：斜杠命令、高级功能与实用补充</p></blockquote><h4 id="_1-斜杠命令-slash-commands" tabindex="-1"><a class="header-anchor" href="#_1-斜杠命令-slash-commands"><span>1. 斜杠命令（Slash Commands）</span></a></h4><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">功能说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>/add-dir &lt;path&gt;</code></td><td style="text-align:left;">添加额外工作目录供 Claude 访问</td></tr><tr><td style="text-align:left;"><code>/bug</code></td><td style="text-align:left;">上报错误给 Anthropic</td></tr><tr><td style="text-align:left;"><code>/clear</code></td><td style="text-align:left;">清除当前会话上下文</td></tr><tr><td style="text-align:left;"><code>/compact [说明]</code></td><td style="text-align:left;">整理对话内容，减少 token 使用</td></tr><tr><td style="text-align:left;"><code>/config</code></td><td style="text-align:left;">查看或修改配置</td></tr><tr><td style="text-align:left;"><code>/cost</code></td><td style="text-align:left;">查看 token 使用统计</td></tr><tr><td style="text-align:left;"><code>/doctor</code></td><td style="text-align:left;">检查 Claude Code 安装状态</td></tr><tr><td style="text-align:left;"><code>/help</code></td><td style="text-align:left;">获取命令帮助列表</td></tr><tr><td style="text-align:left;"><code>/init</code></td><td style="text-align:left;">创建 <code>CLAUDE.md</code>，初始化项目上下文，存储重要的项目信息、约定和常用命令</td></tr><tr><td style="text-align:left;"><code>/login</code>、<code>/logout</code></td><td style="text-align:left;">登录／登出 Anthropic 账户</td></tr><tr><td style="text-align:left;"><code>/mcp</code></td><td style="text-align:left;">管理 Model Context Protocol（MCP）连接</td></tr><tr><td style="text-align:left;"><code>/memory</code></td><td style="text-align:left;">编辑项目记忆文件（CLAUDE.md）</td></tr><tr><td style="text-align:left;"><code>/model</code></td><td style="text-align:left;">切换当前使用模型（如 Sonnet/Opus）</td></tr><tr><td style="text-align:left;"><code>/permissions</code></td><td style="text-align:left;">查看/修改权限设置</td></tr><tr><td style="text-align:left;"><code>/pr_comments</code></td><td style="text-align:left;">查看 Pull Request 评论</td></tr><tr><td style="text-align:left;"><code>/review</code></td><td style="text-align:left;">请求代码审查</td></tr><tr><td style="text-align:left;"><code>/status</code></td><td style="text-align:left;">查看账户与系统状态</td></tr><tr><td style="text-align:left;"><code>/terminal-setup</code></td><td style="text-align:left;">一键配置 Shift+Enter 换行</td></tr><tr><td style="text-align:left;"><code>/ls-sessions</code></td><td style="text-align:left;">查看对话session-id（未来上线）</td></tr><tr><td style="text-align:left;"><code>/vim</code></td><td style="text-align:left;">进入 vim 编辑模式</td></tr></tbody></table><blockquote><p>Claude Code 中的 Vim 编辑模式，是一个用于在终端中模拟 Vim 操作习惯的功能，主要是针对那些习惯使用 Vim 的用户，让他们在 Claude 的交互环境中也能享受熟悉的编辑体验。</p></blockquote><p>自定义 slash 命令可在 <code>.claude/commands</code> 或 <code>~/.claude/commands</code> 中定义，支持 <code>markdown + $ARGUMENTS</code>、bash（<code>!</code>）、文件引用（<code>@</code>）等。</p><h4 id="_2-cli-命令" tabindex="-1"><a class="header-anchor" href="#_2-cli-命令"><span>2. CLI 命令</span></a></h4><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">作用</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>claude</code></td><td style="text-align:left;">启动 REPL 交互式会话</td><td style="text-align:left;"><code>claude</code></td></tr><tr><td style="text-align:left;"><code>claude &quot;...&quot;</code></td><td style="text-align:left;">带初始提示进入会话</td><td style="text-align:left;"><code>claude &quot;explain this project&quot;</code></td></tr><tr><td style="text-align:left;"><code>claude -p &quot;...&quot;</code></td><td style="text-align:left;">非交互式打印结果后退出</td><td style="text-align:left;"><code>claude -p &quot;explain this function&quot;</code></td></tr><tr><td style="text-align:left;"><code>cat file | claude -p &quot;...&quot;</code></td><td style="text-align:left;">处理管道输入文件</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>claude -c</code></td><td style="text-align:left;">继续最近一次会话</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>claude -r &lt;session-id&gt; &quot;...&quot;</code></td><td style="text-align:left;">恢复指定会话</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>claude update</code></td><td style="text-align:left;">更新 Claude Code 到最新版本</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>claude mcp</code></td><td style="text-align:left;">配置 MCP 服务器</td><td style="text-align:left;"></td></tr></tbody></table><h5 id="如何查看指定会话的session-id" tabindex="-1"><a class="header-anchor" href="#如何查看指定会话的session-id"><span>如何查看指定会话的session-id？</span></a></h5><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>查看本地缓存目录</td><td><code>ls ~/.claude/sessions/</code> 找到 session 文件名</td></tr><tr><td>继续上次会话</td><td>用 <code>claude -c</code> 自动连接上次</td></tr><tr><td>查看 shell 历史</td><td><code>grep claude ~/.bash_history</code></td></tr><tr><td>未来功能（可能）</td><td><code>/sessions</code> 或 <code>/history</code> 等命令（尚未支持）</td></tr></tbody></table><h5 id="怎么配置mcp服务器" tabindex="-1"><a class="header-anchor" href="#怎么配置mcp服务器"><span>怎么配置MCP服务器？</span></a></h5><h5 id="步骤-1-创建-mcp-配置文件-json-格式" tabindex="-1"><a class="header-anchor" href="#步骤-1-创建-mcp-配置文件-json-格式"><span>步骤 1：创建 MCP 配置文件（JSON 格式）</span></a></h5><p>你需要写一个 .json 文件，例如 servers.json，结构如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">[</span>\n<span class="line">  {</span>\n<span class="line">    &quot;name&quot;: &quot;filesystem&quot;,</span>\n<span class="line">    &quot;tool&quot;: &quot;filesystem&quot;,</span>\n<span class="line">    &quot;config&quot;: {</span>\n<span class="line">      &quot;root&quot;: &quot;/users/yourname/dev/project&quot;, </span>\n<span class="line">      &quot;writable&quot;: true</span>\n<span class="line">    }</span>\n<span class="line">  },</span>\n<span class="line">  {</span>\n<span class="line">    &quot;name&quot;: &quot;bash&quot;,</span>\n<span class="line">    &quot;tool&quot;: &quot;bash&quot;,</span>\n<span class="line">    &quot;config&quot;: {</span>\n<span class="line">      &quot;allowedCommands&quot;: [&quot;git log&quot;, &quot;npm install&quot;]</span>\n<span class="line">    }</span>\n<span class="line">  }</span>\n<span class="line">]</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个对象代表一个 MCP 工具，字段说明：</p><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>name</code></td><td>MCP 工具在 Claude 中的名字</td></tr><tr><td><code>tool</code></td><td>工具类型（如 <code>bash</code>、<code>filesystem</code>、<code>puppeteer</code>）</td></tr><tr><td><code>config</code></td><td>工具对应的配置参数</td></tr></tbody></table><p>更多支持工具请参考官方说明（如 https://docs.anthropic.com/en/docs/claude-code/mcp ）。</p><h5 id="步骤2-加载-mcp-配置" tabindex="-1"><a class="header-anchor" href="#步骤2-加载-mcp-配置"><span>步骤2： 加载 MCP 配置</span></a></h5><p>通过命令加载配置文件：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">claude --mcp-config servers.json</span>\n<span class="line">或者</span>\n<span class="line">claude mcp</span>\n<span class="line">也可以在slash命令中运行</span>\n<span class="line">/mcp</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="步骤-3-可选-设置默认-mcp-配置路径" tabindex="-1"><a class="header-anchor" href="#步骤-3-可选-设置默认-mcp-配置路径"><span>步骤 3（可选）：设置默认 MCP 配置路径</span></a></h5><p>将你的配置保存为默认位置（例如）：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">~/.claude/mcp/servers.json</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="示例用途" tabindex="-1"><a class="header-anchor" href="#示例用途"><span>示例用途</span></a></h5><p>加载文件系统 MCP 后，你可以让 Claude 自动执行：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">/ask “请修改 main.py 的函数签名”</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>加载 Bash 工具后，可以请求：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">“请运行 git log 并总结最近的提交”</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>之后可能会出Claude Code配置MCP的教程，感兴趣的关注一下公众号</p></blockquote><h4 id="_3-cli-参数-flags" tabindex="-1"><a class="header-anchor" href="#_3-cli-参数-flags"><span>3. CLI 参数（Flags）</span></a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>--add-dir</code></td><td style="text-align:left;">添加工作目录</td><td style="text-align:left;"><code>claude --add-dir ../lib</code></td></tr><tr><td style="text-align:left;"><code>--allowedTools</code></td><td style="text-align:left;">允许工具列表</td><td style="text-align:left;"><code>&quot;Bash(git log:*)&quot;</code></td></tr><tr><td style="text-align:left;"><code>--disallowedTools</code></td><td style="text-align:left;">禁用工具列表</td><td style="text-align:left;"><code>&quot;Edit&quot;</code></td></tr><tr><td style="text-align:left;"><code>--print</code>, <code>-p</code></td><td style="text-align:left;">以非交互模式运行</td><td style="text-align:left;"><code>claude -p &quot;...&quot;</code></td></tr><tr><td style="text-align:left;"><code>--output-format</code></td><td style="text-align:left;">输出格式（text/json/stream-json）</td><td style="text-align:left;"><code>--output-format json</code></td></tr><tr><td style="text-align:left;"><code>--input-format</code></td><td style="text-align:left;">输入格式控制</td><td style="text-align:left;"><code>--input-format stream-json</code></td></tr><tr><td style="text-align:left;"><code>--verbose</code></td><td style="text-align:left;">开启详细日志</td><td style="text-align:left;"><code>claude --verbose</code></td></tr><tr><td style="text-align:left;"><code>--max-turns</code></td><td style="text-align:left;">设置最大对话轮次</td><td style="text-align:left;"><code>--max-turns 3</code></td></tr><tr><td style="text-align:left;"><code>--model</code></td><td style="text-align:left;">指定使用模型</td><td style="text-align:left;"><code>--model claude-sonnet-4-20250514</code></td></tr><tr><td style="text-align:left;"><code>--permission-mode</code></td><td style="text-align:left;">设置权限模式</td><td style="text-align:left;"><code>--permission-mode plan</code></td></tr><tr><td style="text-align:left;"><code>--permission-prompt-tool</code></td><td style="text-align:left;">非交互模式下使用 MCP 工具</td><td style="text-align:left;"><code>--permission-prompt-tool mcp_auth_tool</code></td></tr><tr><td style="text-align:left;"><code>--resume</code></td><td style="text-align:left;">恢复指定会话</td><td style="text-align:left;"><code>--resume abc123</code></td></tr><tr><td style="text-align:left;"><code>--continue</code></td><td style="text-align:left;">继续最近会话（同 -c）</td><td style="text-align:left;"><code>--continue</code></td></tr><tr><td style="text-align:left;"><code>--dangerously-skip-permissions</code></td><td style="text-align:left;">跳过权限提示（需谨慎）</td><td style="text-align:left;"></td></tr></tbody></table><h4 id="_4-交互模式快捷键" tabindex="-1"><a class="header-anchor" href="#_4-交互模式快捷键"><span>4. 交互模式快捷键</span></a></h4><table><thead><tr><th style="text-align:left;">快捷键</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;">Ctrl+C</td><td style="text-align:left;">取消输入/中断生成</td></tr><tr><td style="text-align:left;">Ctrl+D</td><td style="text-align:left;">退出 Claude Code 会话</td></tr><tr><td style="text-align:left;">Ctrl+L</td><td style="text-align:left;">清屏（保留历史）</td></tr><tr><td style="text-align:left;">Ctrl+R</td><td style="text-align:left;">历史反向搜索（若终端支持）</td></tr><tr><td style="text-align:left;">↑/↓</td><td style="text-align:left;">浏览输入历史</td></tr><tr><td style="text-align:left;">Esc + Esc</td><td style="text-align:left;">编辑上条消息</td></tr><tr><td style="text-align:left;"><code>\\</code>+Enter 或 Option+Enter（macOS）或 Shift+Enter（经 <code>/terminal-setup</code> 设置后）</td><td style="text-align:left;">多行输入</td></tr><tr><td style="text-align:left;"><code>#</code> 开头</td><td style="text-align:left;">快速添加记忆到 CLAUDE.md</td></tr><tr><td style="text-align:left;"><code>/</code> 开头</td><td style="text-align:left;">激活 Slash 命令提示</td></tr></tbody></table><p><strong>Vim 模式（需先启用 <code>/vim</code> 或相关配置）</strong> ： 常见命令包括：<code>Esc</code>, <code>i</code>, <code>a</code>, <code>h/j/k/l</code>, <code>w/e/b</code>, <code>0/$</code>, <code>gg/G</code>, <code>x</code>, <code>dd</code>, <code>cw</code> 等。</p><h4 id="_5-高级功能与实用补充" tabindex="-1"><a class="header-anchor" href="#_5-高级功能与实用补充"><span>5. 高级功能与实用补充</span></a></h4><ul><li><strong>CLAUDE.md 文件机制</strong>：项目上下文记忆文件，自动加载增强对话效果。</li><li><strong>自定义 Slash 命令</strong>：允许通过 <code>.claude/commands/*.md</code> 或 <code>~/.claude/commands/*.md</code> 实现自定义工作流脚本，支持 <code>$ARGUMENTS</code>、bash 预处理、文件引用、MCP 等 。</li><li><strong>MCP（Model Context Protocol）能力</strong>：集成例如 Puppeteer、数据库、Stripe 等外部服务，实现网页操作、数据库查询、API 调用等 。</li><li><strong>Hooks 支持</strong>：可定义代码推送、合并时自动触发脚本／操作（7 月初新增）。</li><li><strong>图像操作能力</strong>（最新实践）：支持拖放/粘贴图像、结合 MCP 截图、UI 反馈循环等 。</li><li><strong>多实例并行支持</strong>：可在多个工作目录中分别运行多个 Claude Code 实例，互不干扰 。</li></ul><p>如果你还知道怎么安装部署Claude Code，可以查看往期文章👇</p>',38)),(0,d.Lk)("p",null,[(0,d.Lk)("a",n,[e[2]||(e[2]=(0,d.eW)("Claude Code是什么？Mac、Linux系统如何安装部署呢？",-1)),(0,d.bF)(l)])]),(0,d.Lk)("p",null,[(0,d.Lk)("a",o,[e[3]||(e[3]=(0,d.eW)("【保姆级教程】Windows系统如何安装部署Claude Code？国内如何使用到Claude Code？",-1)),(0,d.bF)(l)])]),e[18]||(e[18]=(0,d.Lk)("p",null,"由于官网价格稍贵且不稳定，对于很多人来说都是不太友好的，我这里推荐用Claude Code国内中转站",-1)),(0,d.Lk)("blockquote",null,[(0,d.Lk)("p",null,[e[5]||(e[5]=(0,d.eW)("登录网址：",-1)),(0,d.Lk)("a",i,[e[4]||(e[4]=(0,d.eW)("https://gaccode.com",-1)),(0,d.bF)(l)]),e[6]||(e[6]=(0,d.eW)(" （认准.com，没有开放任何其他域名和地址，使用其他盗版地址造成的模型欺诈跑路风险与GAC无关）",-1))]),(0,d.Lk)("p",null,[e[8]||(e[8]=(0,d.eW)("注册时可打开：",-1)),(0,d.Lk)("a",c,[e[7]||(e[7]=(0,d.eW)("https://gaccode.com/signup?ref=OLWRETNE",-1)),(0,d.bF)(l)]),e[9]||(e[9]=(0,d.eW)(" （后面购买月卡多赠送一万积分）",-1))]),(0,d.Lk)("p",null,[e[11]||(e[11]=(0,d.eW)("卡密获取方式👉：",-1)),(0,d.Lk)("a",r,[e[10]||(e[10]=(0,d.eW)("https://www.chatshare.uno/",-1)),(0,d.bF)(l)])])]),e[19]||(e[19]=(0,d.Lk)("p",null,[(0,d.Lk)("strong",null,"GAC是5月份全网首发的，比官网便宜很多也很稳定，可直接优惠使用到Claude Code，自己体验下来也是一路顺畅，很值得推荐，欢迎各位小伙伴来体验。如果有企业需要合作也可以联系我~")],-1)),e[20]||(e[20]=(0,d.Lk)("hr",null,null,-1)),e[21]||(e[21]=(0,d.Lk)("p",null,"最后感谢大家能够看到文章的最后，如果你觉得这篇文章对你有启发或者帮助，不妨点个关注，你的支持将是我最大的动力，谢谢！",-1)),e[22]||(e[22]=(0,d.Lk)("p",null,[(0,d.Lk)("img",{src:"https://img.zeker.top/official_account_card.webp",alt:""})],-1))])}]]),g=JSON.parse('{"path":"/blog/claude/claude-code-full-command-list.html","title":"全面掌控 Claude Code：命令 + 参数 + 快捷键一文全整理（建议收藏）","lang":"en-US","frontmatter":{"title":"全面掌控 Claude Code：命令 + 参数 + 快捷键一文全整理（建议收藏）","date":"2025-07-10 14:00","description":"Claude Code有哪些？命令 + 参数 + 快捷键一文全整理（建议收藏）","tags":["Claude Code"],"categories":["Claude Code"]},"git":{},"filePathRelative":"blog/claude/claude-code-full-command-list.md","excerpt":"\\n<p>近日，随着Cursor套餐定价的风波，Claude Code 无疑成为了最近颇受欢迎的代码助手，不仅支持多种编程语言，还比Cursor更能理解复杂的上下文逻辑，极受广大开发者的青睐。</p>\\n<p><img src=\\"https://img.zeker.top/claude/claude-code-full-command-list/1.webp\\" alt=\\"\\"></p>\\n<p>不过，与其他AI编程助手不同的是，Claude Code 以 CLI 形式运行在本地终端，对于开发者来说，部署操作没什么，但对于代码小白来说，想真正用顺手，还是得熟悉它的命令和用法。</p>\\n<p>前阵子分别对于Mac、Linux、Windows系统安装部署Claude Code分别写了文章，不知道怎么部署的可以看一下往期文章</p>\\n<p><a href=\\"https://mp.weixin.qq.com/s/MO5yB1wUFoaUkw2XbaLCbg\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Claude Code是什么？Mac、Linux系统如何安装部署呢？</a></p>\\n<p><a href=\\"https://mp.weixin.qq.com/s/ZB-gSJq4jgzVTUSofGoOgQ\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【保姆级教程】Windows系统如何安装部署Claude Code？国内如何使用到Claude Code？</a></p>\\n<p><strong>为更方便大家使用，为此我整理了一份 Claude Code 的实用命令速查表，涵盖了常用场景和技巧，方便大家在工作中随时查阅。</strong></p>\\n<p><strong>建议收藏，关键时候没准还真能省不少时间。</strong></p>\\n"}')}}]);